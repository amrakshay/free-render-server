events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format with detailed timing and request info
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'upstream="$upstream_addr" '
                        'host="$host" method="$request_method" uri="$request_uri"';

    # Logging Settings - Output to stdout/stderr for docker logs
    access_log /dev/stdout detailed;
    error_log /dev/stderr warn;

    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Upstream for n8n
    upstream n8n_backend {
        server 127.0.0.1:5678;
    }

    server {
        listen 80;
        server_name _;

        # Root location - can serve a simple landing page or redirect
        location / {
            return 200 "Server is running. Access n8n at /n8n";
            add_header Content-Type text/plain;
        }

        # Proxy all /n8n requests to n8n backend
        location /n8n/ {
            # Try to proxy to n8n, fallback to unavailable message
            error_page 502 503 504 = @n8n_unavailable;
            proxy_pass http://n8n_backend/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Handle WebSocket connections
            proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
            proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
            proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;

            # Timeout settings
            proxy_connect_timeout       60s;
            proxy_send_timeout          60s;
            proxy_read_timeout          60s;
        }

        # Handle n8n unavailable
        location @n8n_unavailable {
            return 503 "n8n service is disabled. Enable with N8N_ENABLED=true in .env file.";
            add_header Content-Type text/plain;
        }

        # GreyTHR Attendance System proxy
        location /greythr/ {
            # Try to proxy to GreyTHR backend, fallback to unavailable message
            error_page 502 503 504 = @greythr_unavailable;
            proxy_pass http://127.0.0.1:5000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings
            proxy_connect_timeout       30s;
            proxy_send_timeout          30s;
            proxy_read_timeout          30s;
        }

        # Handle GreyTHR unavailable
        location @greythr_unavailable {
            return 503 "GreyTHR Attendance System is disabled. Enable with GREYTHR_ENABLED=true in .env file.";
            add_header Content-Type text/plain;
        }

        # Health check endpoint
        location /health {
            return 200 "OK";
            add_header Content-Type text/plain;
        }

        # Ngrok tunnel URL endpoint
        location /ngrok {
            root /var/www;
            try_files /ngrok.txt =404;
            add_header Content-Type text/plain;
        }
    }
}
